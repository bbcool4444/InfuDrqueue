/******************************************************************************
 * The following code was generated by the mental mill(R)                     *
 * code generator gen_msl, build 126420.5925.2036
 *                                                                            *
 * Portions Copyright (c) 1986-2010 mental images GmbH, Berlin, Germany.      *
 ******************************************************************************/


// Option settings:
//	shader_type : surface


shader adsk_Shd_MSL_Stone_spider {

output:

    float diffuse_roughness;
    float reflectivity;
    float refl_gloss;
    float brdf_0_degree_refl;
    float brdf_curve;
    bool refl_hl_only;
    float3 noise_tiling;
    float rw_uv_scale;

input:

    int application;
    int iBump;
    float rw_uv_scale_i;
    float iSceneToMeterScale;

member:


    void main()
    {
        diffuse_roughness = 0.0f;
        reflectivity = 0.0f;
        refl_gloss = 0.0f;
        brdf_0_degree_refl = 0.0f;
        brdf_curve = 5.0f;
        refl_hl_only = false;
        noise_tiling = float3(0.0f,0.0f,0.0f);
        rw_uv_scale = 0.0f;
        switch(application) {
        case 0:
            reflectivity = 0.85f;
            refl_gloss = 0.8f;
            brdf_0_degree_refl = 0.15f;
            break;
        case 1:
            reflectivity = 0.65f;
            refl_gloss = 0.5f;
            brdf_0_degree_refl = 0.125f;
            break;
        case 2:
            diffuse_roughness = 0.15f;
            reflectivity = 0.5f;
            refl_gloss = 0.32f;
            brdf_0_degree_refl = 0.2f;
            brdf_curve = 2.0f;
            refl_hl_only = true;
            break;
        case 3:
            diffuse_roughness = 0.3f;
            reflectivity = 0.15f;
            refl_gloss = 0.2f;
            brdf_0_degree_refl = 0.1f;
            brdf_curve = 0.6f;
            refl_hl_only = true;
        }
        float X0000000 = 0.0254f;
        if(iSceneToMeterScale != 0.0f)
            X0000000 = iSceneToMeterScale;
        float X0000001 = 1.0f / X0000000;
        float X0000002 = 39.370079f;
        switch(iBump) {
        case 0:
        case 4:
            break;
        case 1:
        case 3:
            rw_uv_scale = (rw_uv_scale_i * (15.0f / X0000002)) * X0000001;
            break;
        case 2:
            rw_uv_scale = (rw_uv_scale_i * (100.0f / X0000002)) * X0000001;
            break;
        }
    }
};
