/******************************************************************************
 * The following code was generated by the mental mill(R)                     *
 * code generator gen_msl, build 126420.5925.2036
 *                                                                            *
 * Portions Copyright (c) 1986-2010 mental images GmbH, Berlin, Germany.      *
 ******************************************************************************/


// Option settings:
//	shader_type : surface


shader adsk_Shd_MSL_Glazing_spider {

output:

    Color refr_color;
    Color refl_color;
    Color refl_color_shadows;
    float brdf_0_degree_refl;
    int trans_switch;

input:

    int no_levels;
    int transmittance_color;
    Color transmittance_map;
    float reflectance;

member:


    float X0000000(Color X0000004)
    {
        float X0000005 = X0000004.r;
        if(X0000005 < X0000004.g)
            X0000005 = X0000004.g;
        if(X0000005 < X0000004.b)
            X0000005 = X0000004.b;
        return X0000005;
    }

    float X0000001(Color X0000006)
    {
        float X0000007 = (0.265f * X0000006.r + 0.67f * X0000006.g) + 0.065f * X0000006.b;
        return X0000007;
    }

    Color X0000002(Color X0000008)
    {
        Color X0000009;
        float X0000010 = X0000000(X0000008);
        X0000009 = X0000008 / X0000010;
        return X0000009;
    }

    float X0000003(Color X0000011)
    {
        Color X0000012 = X0000002(X0000011);
        float X0000013 = X0000001(X0000012);
        float X0000014 = X0000001(X0000011);
        float X0000015 = X0000014 / X0000013;
        return X0000015;
    }

    void main()
    {
        refr_color = float4(0.0f,0.0f,0.0f,0.0f);
        refl_color = float4(0.0f,0.0f,0.0f,0.0f);
        refl_color_shadows = float4(0.0f,0.0f,0.0f,0.0f);
        brdf_0_degree_refl = 0.0f;
        trans_switch = 0;
        Color X0000016 = float4(reflectance,reflectance,reflectance,1.0f);
        Color X0000017 = float4(0.0f,0.0f,0.0f,1.0f);
        Color X0000018 = float4(0.858f,0.893f,0.879f,1.0f);
        Color X0000019 = float4(0.676f,0.797f,0.737f,1.0f);
        Color X0000020 = float4(0.451f,0.449f,0.472f,1.0f);
        Color X0000021 = float4(0.367f,0.514f,0.651f,1.0f);
        Color X0000022 = float4(0.654f,0.788f,0.772f,1.0f);
        Color X0000023 = float4(0.583f,0.516f,0.467f,1.0f);
        switch(transmittance_color) {
        case 0:
            X0000017 = X0000018;
            break;
        case 1:
            X0000017 = X0000019;
            break;
        case 2:
            X0000017 = X0000020;
            break;
        case 3:
            X0000017 = X0000021;
            break;
        case 4:
            X0000017 = X0000022;
            break;
        case 5:
            X0000017 = X0000023;
            break;
        case 6:
            X0000017 = transmittance_map;
            break;
        }
        float X0000024 = float((7 - no_levels)) * 0.5f;
        refr_color = pow(X0000017,1.0f / X0000024);
        refl_color.r = (refl_color.g = (refl_color.b = reflectance));
        float X0000025 = reflectance;
        X0000025 /= float(no_levels);
        refl_color_shadows.r = (refl_color_shadows.g = (refl_color_shadows.b = X0000025));
        brdf_0_degree_refl = X0000003(refl_color);
        refr_color = refr_color * 0.5f;
    }
};
