/******************************************************************************
 * The following code was generated by the mental mill(R)                     *
 * code generator gen_msl, build 126420.5925.2036
 *                                                                            *
 * Portions Copyright (c) 1986-2010 mental images GmbH, Berlin, Germany.      *
 ******************************************************************************/


// Option settings:
//	shader_type : surface


shader adsk_Shd_MSL_Ceramic_spider {

output:

    float diffuse_roughness;
    float reflectivity;
    float refl_gloss;
    float brdf_curve;
    float3 noise_tiling;

input:

    int type;
    int application;
    float iSceneToMeterScale;

member:


    void main()
    {
        diffuse_roughness = 0.0f;
        reflectivity = 1.0f;
        refl_gloss = 1.0f;
        brdf_curve = 5.0f;
        noise_tiling = float3(0.0f,0.0f,0.0f);
        switch(type) {
        case 0:
            switch(application) {
            case 0:
                diffuse_roughness = 0.0f;
                reflectivity = 0.9f;
                refl_gloss = 0.85f;
                break;
            case 1:
                diffuse_roughness = 0.1f;
                reflectivity = 0.6f;
                refl_gloss = 0.5f;
                break;
            case 2:
                diffuse_roughness = 0.35f;
                reflectivity = 0.4f;
                refl_gloss = 0.325f;
                break;
            }
            break;
        case 1:
            switch(application) {
            case 0:
                diffuse_roughness = 0.0f;
                reflectivity = 0.375f;
                refl_gloss = 0.9f;
                break;
            case 1:
                diffuse_roughness = 0.1f;
                reflectivity = 0.325f;
                refl_gloss = 0.4f;
                brdf_curve = 3.0f;
                break;
            case 2:
                diffuse_roughness = 0.2f;
                reflectivity = 0.3f;
                refl_gloss = 0.25f;
                brdf_curve = 2.0f;
                break;
            }
            break;
        }
        float X0000000 = 0.0254f;
        if(iSceneToMeterScale != 0.0f)
            X0000000 = iSceneToMeterScale;
        float X0000001 = 1.0f / X0000000;
        noise_tiling.x = (39.370079f / X0000001) * 4.0f;
        noise_tiling.y = (11.8110237f / X0000001) * 4.0f;
        noise_tiling.z = (11.8110237f / X0000001) * 4.0f;
    }
};
