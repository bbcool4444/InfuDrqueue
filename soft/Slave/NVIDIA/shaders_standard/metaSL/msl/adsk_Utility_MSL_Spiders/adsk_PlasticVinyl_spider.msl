/******************************************************************************
 * The following code was generated by the mental mill(R)                     *
 * code generator gen_msl, build 126420.5925.2036
 *                                                                            *
 * Portions Copyright (c) 1986-2010 mental images GmbH, Berlin, Germany.      *
 ******************************************************************************/


// Option settings:
//	shader_type : surface


shader adsk_Shd_MSL_PlasticVinyl_spider {

output:

    float diffuse_roughness;
    float reflectivity;
    float refl_gloss;
    float brdf_0_degree_refl;
    float brdf_curve;
    float transparency;
    float refr_gloss;
    bool refr_translucency;
    float refr_trans_weight;

input:

    int type;
    int application;

member:


    void main()
    {
        diffuse_roughness = 0.0f;
        reflectivity = 0.0f;
        refl_gloss = 0.0f;
        brdf_0_degree_refl = 0.0f;
        brdf_curve = 0.0f;
        transparency = 0.0f;
        refr_gloss = 1.0f;
        refr_translucency = false;
        refr_trans_weight = 0.0f;
        switch(type) {
        case 0:
            switch(application) {
            case 0:
                diffuse_roughness = 0.0f;
                reflectivity = 0.6f;
                refl_gloss = 0.8f;
                brdf_0_degree_refl = 0.1f;
                brdf_curve = 3.0f;
                break;
            case 1:
                diffuse_roughness = 0.0f;
                reflectivity = 0.65f;
                refl_gloss = 0.45f;
                brdf_0_degree_refl = 0.1f;
                brdf_curve = 2.0f;
                break;
            case 2:
                diffuse_roughness = 0.3f;
                reflectivity = 0.65f;
                refl_gloss = 0.2f;
                brdf_0_degree_refl = 0.15f;
                brdf_curve = 1.5f;
                break;
            }
            break;
        case 1:
            switch(application) {
            case 0:
                diffuse_roughness = 0.0f;
                reflectivity = 0.6f;
                refl_gloss = 0.8f;
                brdf_0_degree_refl = 0.15f;
                brdf_curve = 1.5f;
                transparency = 0.025f;
                refr_gloss = 0.975f;
                refr_translucency = false;
                refr_trans_weight = 0.0f;
                break;
            case 1:
                diffuse_roughness = 0.0f;
                reflectivity = 0.65f;
                refl_gloss = 0.45f;
                brdf_0_degree_refl = 0.1f;
                brdf_curve = 2.0f;
                transparency = 0.05f;
                refr_gloss = 0.45f;
                refr_translucency = true;
                refr_trans_weight = 0.175f;
                break;
            case 2:
                diffuse_roughness = 0.3f;
                reflectivity = 0.65f;
                refl_gloss = 0.2f;
                brdf_0_degree_refl = 0.15f;
                brdf_curve = 1.5f;
                transparency = 0.125f;
                refr_gloss = 0.2f;
                refr_translucency = true;
                refr_trans_weight = 0.4f;
                break;
            }
            break;
        case 2:
            switch(application) {
            case 0:
                diffuse_roughness = 0.1f;
                reflectivity = 0.65f;
                refl_gloss = 0.465f;
                brdf_0_degree_refl = 0.1f;
                brdf_curve = 2.5f;
                break;
            case 1:
                diffuse_roughness = 0.1f;
                reflectivity = 0.65f;
                refl_gloss = 0.465f;
                brdf_0_degree_refl = 0.1f;
                brdf_curve = 2.5f;
                break;
            case 2:
                diffuse_roughness = 0.15f;
                reflectivity = 0.625f;
                refl_gloss = 0.2f;
                brdf_0_degree_refl = 0.075f;
                brdf_curve = 3.0f;
                break;
            }
            break;
        }
    }
}
{
    description("Testing Spiders, multi outputs and cache mechanism");
};
