/******************************************************************************
 * The following code was generated by the mental mill(R)                     *
 * code generator gen_msl, build 126420.5925.3501
 *                                                                            *
 * Portions Copyright (c) 1986-2010 mental images GmbH, Berlin, Germany.      *
 ******************************************************************************/

// Option settings:


shader adsk_Utility_MSL_TexLookup {

output:

    Color result;

input:

    float3 coord;
    bool elipt_enable;
    float elipt_disc_r;
    float elipt_eccmax;
    float elipt_maxminor;
    float elipt_circle;
    bool elipt_bilinear;
    int elipt_space;
    Shader elipt_remap;
    float gamma;
    int switcher_slot;
    bool is_color_only;
    texture2D input_texture_00;
    texture2D input_texture_01;
    texture2D input_texture_02;
    texture2D input_texture_03;
    texture2D input_texture_04;
    texture2D input_texture_05;
    texture2D input_texture_06;
    texture2D input_texture_07;
    Color input_color_00;
    Color input_color_01;
    Color input_color_02;
    Color input_color_03;
    Color input_color_04;
    Color input_color_05;
    Color input_color_06;
    Color input_color_07;

member:


    void main()
    {
        result = float4(0.0f,0.0f,0.0f,0.0f);
    }
};


shader adsk_Utility_MSL_BumpLookup {

output:

    float3 result;

input:

    float3 coord;
    bool elipt_enable;
    float elipt_disc_r;
    float elipt_eccmax;
    float elipt_maxminor;
    float elipt_circle;
    bool elipt_bilinear;
    int elipt_space;
    Shader elipt_remap;
    float3 u;
    float3 v;
    float3 step;
    float factor;
    int switcher_slot;
    bool is_3Dbump;
    texture2D input_texture_00;
    texture2D input_texture_01;
    texture2D input_texture_02;
    texture2D input_texture_03;
    texture2D input_texture_04;
    texture2D input_texture_05;
    texture2D input_texture_06;
    texture2D input_texture_07;
    Color input_color_00;
    Color input_color_01;
    Color input_color_02;
    Color input_color_03;
    Color input_color_04;
    Color input_color_05;
    Color input_color_06;
    Color input_color_07;

member:


    void main()
    {
        result = float3(0.0f,0.0f,0.0f);
    }
};


shader adsk_Utility_MSL_ColorCorrection {

output:

    Color result;

input:

    Color input;
    float gamma;
    float gain;
    float bias;
    float hue;
    float sat;
    float value;
    bool invert;
    bool dynRangeEnable;
    float dynRangeExpand;
    float dynRangeStartLum;
    float dynRangeExponent;
    int cache_mode;

member:


    void main()
    {
        result = float4(0.0f,0.0f,0.0f,0.0f);
    }
};


shader adsk_Utility_MSL_SurfaceLuminance {

output:

    Color result;

input:

    bool is_physical;
    float bias;
    Color colorA;
    Color colorB;

member:


    void main()
    {
        result = float4(0.0f,0.0f,0.0f,1.0f);
    }
};
